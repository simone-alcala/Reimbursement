// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int @id @default(autoincrement())
  fullName          String
  email             String
  password          String
  avatar            String?
  active            Boolean @default(true)
  isAdmin           Boolean @default(false)

  department        Department? @relation(fields: [departmentId], references: [id])
  departmentId      Int?
  
  approvers         Approver[]
  approvalHistory   ApprovalHistory[]
  requestRequesters Request[] @relation("requesterRelation")
  requestApprovers  Request[] @relation("approverRelation")

  @@map("users")
}

model Department {
  id              Int @id @default(autoincrement())
  description     String @unique
  active          Boolean @default(true)

  users           User[]
  approvers       Approver[]

  @@map("departments")
}

model Approver {
  id              Int @id @default(autoincrement())

  department      Department @relation(fields: [departmentId], references: [id])
  departmentId    Int
  
  user            User @relation(fields: [userId], references: [id])
  userId          Int
  
  selfApproval    Boolean @default(false)
  active          Boolean @default(true)

  @@map("approvers")
}

model Expense {
  id              Int @id @default(autoincrement())
  description     String
  active          Boolean @default(true)

  requestItems    RequestItem[]

  @@map("expenses")
}

model Request {
  id              Int @id @default(autoincrement())
  description     String

  requester       User @relation("requesterRelation", fields: [requesterId], references: [id])
  requesterId     Int
  
  approver        User? @relation("approverRelation", fields: [approverId], references: [id])
  approverId      Int?
  
  status          String
  approverComment String?

  requestItems    RequestItem[]
  history         ApprovalHistory[]

  @@map("requests")
}

model RequestItem {
  id              Int @id @default(autoincrement())
  expenseDate     DateTime @db.Timestamptz(6)

  request         Request @relation(fields: [requestId], references: [id])
  requestId       Int
  
  expense         Expense @relation(fields: [expenseId], references: [id])
  expenseId       Int
  
  description     String
  receipt         String?

  @@map("requestItems")
}

model ApprovalHistory {
  id              Int @id @default(autoincrement())

  request         Request @relation(fields: [requestId], references: [id])
  requestId       Int
  
  user            User @relation(fields: [approverId], references: [id])
  approverId      Int
  
  status          String
  comment         String?

  @@map("approvalHistory")
}

